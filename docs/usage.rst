=====
Usage
=====

The pancake service is exposed via HTTP. To use it, the simplest way is via
the `requests` lib::

    from requests import Session
    session = Session()
    session.headers['Content-Type'] = 'application/json'
    # url to pancake
    server = 'http://localhost:8080'

First a contact need to be created for a user::

    # create contact for user "harry"
    # allow 2 notifications per day(86400 sec)
    r = requests.post(server + '/contact/', data=json.dumps({
        'user_id': 'harry',
        'notifications': 2,
        'interval': 86400,
    }))
    print r.status_code  # 201
    contact = r.json()
    # create 2 media for the contact
    r = request.post(server + '/media/', data=json.dumps([{
        'type': 'email',
        'address': 'blurrcat@gmail.com',
        'contact': contact['_id']
    }]))
    print r.status_code  # 201
    media_email = r.json()

To receive notifications for events, create subscriptions::

    from datetime import datetime
    # notify me via email if level of event "battery low" is WARNING or above
    # in the following 2 days
    request.post(server + '/subscription/', data=json.dumps({
        'user_id': 'harry',
        'event': 'battery low',
        'level': 3,  # WARNING
        'start_time': datetime(2015, 2, 3),
        'end_time': datetime(2015, 2, 5),
        'media': media_email['_id'],
    }))

Now the following event would trigger an email notification to me::

    request.post(server + '/event/', data=json.dumps({
        'event': 'battery_low',
        'level': 4, # CRITICAL
        'time': datetime(2015, 2, 4),
        'user_id': 'harry',
    }))

The event is likely to be generated by other parts of the system.
